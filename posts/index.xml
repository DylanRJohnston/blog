<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on dylanj.xyz</title>
    <link>https://dylanj.xyz/posts/</link>
    <description>Recent content in Posts on dylanj.xyz</description>
    <image>
      <url>https://avatars.githubusercontent.com/u/5708800?v=4</url>
      <link>https://avatars.githubusercontent.com/u/5708800?v=4</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 01 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://dylanj.xyz/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Formally Verifying Rust&#39;s Opaque Types</title>
      <link>https://dylanj.xyz/posts/rust-coq-opaque-types/</link>
      <pubDate>Mon, 01 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dylanj.xyz/posts/rust-coq-opaque-types/</guid>
      <description>Introduction The other day I was reading this blog post covering existential types in Rust (also known as impl Trait or opaque types). In that blog post, the author makes the following claim.
We’re going to have to take a slight diversion into type theory here because it motivates a result that is perhaps intuitive. The following proposition holds in intuitionistic logic: ((∃ x. P(x)) → Q) ⇔ (∀ x. (P(x) → Q)), which means that according to the Curry–Howard Correspondence, it also holds when considering the proposition as a type.</description>
    </item>
    
    <item>
      <title>How I Made This Blog</title>
      <link>https://dylanj.xyz/posts/how-i-made-this-blog/</link>
      <pubDate>Wed, 27 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dylanj.xyz/posts/how-i-made-this-blog/</guid>
      <description>Plan of Attack When evaluating options for starting a blog I wanted something that was fast, free, and easy to setup CI / CD for. GitHub Pages ticks both the free and easy boxes but it can be a bit slow to respond. To solve the speed issue I stuck cloudflare in front of GitHub to leverage its CDN caching, ensuring that response times are fast.
┌ │ │ │ └ ┌ │ └ ─ ─ ─ ─ ─ d ─ ─ U ─ ─ y ─ ─ s ─ ─ l ─ ─ e ─ ─ G a ─ ─ r ─ ─ i n ─ ─ ─ ─ t r ─ ┐ ├ ┘ ─ H j ─ ─ ─ u o ─ ─ ─ b h ─ ─ ─ n ─ ─ ─ R s ─ ─ ─ e t ─ ┌ │ ► │ └ ─ p o ─ ─ ─ ─ o n ─ ─ C N ─ ─ s .</description>
    </item>
    
  </channel>
</rss>
